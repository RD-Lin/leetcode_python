class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> ans;
        string temp;
        backtrace(ans, temp, 0, 0, n);
        return ans;
    }

    void backtrace(vector<string>& ans, string& temp, int left, int right, int n){
        if(left<right || left>n || right>n) return;
        if(left==n && right==n) ans.push_back(temp);
        if(left>=right){
            temp.push_back('(');
            backtrace(ans, temp, left+1, right, n);
            temp.pop_back();
            temp.push_back(')');
            backtrace(ans, temp, left, right+1, n);
            temp.pop_back();
        }
    }
};
